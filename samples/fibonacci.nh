
# the slower fibonacci which is O(2^i) complexity
function fib i as
    let res = 1
    if >= i 3 then
        let res = + fib - i 2 fib - i 1
    end if
    return res
end function

# O(1) complexity
function betterfib i as
    let a = 0
    let b = 1
    while > i 0 do
        let c = + a b
        let a = b
        let b = c
        let i = - i 1
    end while
    return a
end function

# main function
function main as
    let t = scan
    while > t 0 do
        let x = scan
        let resa = betterfib x
        let resb = fib x
        print resa resb
        let t = - t 1
    end while
    return 0
end function
